var TYPE = 'DEDF2025-484F-479A-B576-965B847E7BC4';

function makeModule(source) {
    if (source && typeof source.getType === 'function') {
        try {
            if (source.getType() === TYPE) {
                return source;
            }
        } catch (e) {}
    }

    function getName(namespace) {
        var index = namespace.lastIndexOf('.');
        return index != -1 ?
            namespace.substring(index + 1) :
            namespace;
    }

    return {
        getType : function() {
            return TYPE;
        },
        getFiles : function() {
            return source.files;
        },
        getName : function() {
            return source.name;
        },
        getDependencies:function() {
            return source.dependencies;
        },
        getEnvironment : function() {
            return source.environment;
        },
        getExports : function() {
            var exports = source.exports;
            if (exports) {
                if (String(exports) === exports) {
                    return {
                        local : 'exports',
                        global : exports
                    }
                } else {
                    var exportProperties = Object.getOwnPropertyNames(exports);
                    if (exportProperties.length != 1) {
                        throw new Error("export configuration is valid.");
                    }

                    var local = exportProperties[0];
                    exports = exports[local];
                    return {
                        local : local,
                        global : String(exports) === exports ? exports : exports.global
                    }
                }
            }

            return {
                local : getName(source.name),
                global : source.name
            }
        },
        getSource : function() {
            return source;
        }
    }
}
module.exports = makeModule;