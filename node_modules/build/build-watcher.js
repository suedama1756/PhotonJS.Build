var _system = require('system'),
    _fs = require('fs'),
    _path = require('path');

var getFullPath = function(basePath, fileName) {
    return _path.normalize(_path.resolve(basePath, _path.dirname(fileName)));
}


var ModuleWatcher = function Watcher() {
    this.watchers_ = {};
}

function scan(oldWatchers, basePath, files) {
    var newWatchers = {};
    files.forEach(function(file) {
        var path = getFullPath(basePath, file), key = path.toLowerCase();
        if (!newWatchers[path]) {
            if (oldWatchers[path]) {
                newWatchers[path] = oldWatchers(path);
            }
            else {
                newWatchers[path] = _fs.watch(path);
                _fs.on('change', callback);
            }
        }
    });

    // close any watchers no longer required
    Object.getOwnPropertyNames(oldWatchers).forEach(function(key) {
        if (!newWatchers[key]) {
            oldWatchers[key].close();
        }
    });
}

_system.extend(ModuleWatcher,
    /**
     * @extends ModuleWatcher.prototype
     */
    {

        start : function() {
            if (this.isActive_) {
                return;
            }
        },
        stop : function() {
            if (!this.isActive_) {
                return;
            }
        },
        isActive : function() {
            return this._isActive;
        }
    });

module.exports = ModuleWatcher;





